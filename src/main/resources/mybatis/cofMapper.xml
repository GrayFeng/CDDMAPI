<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
	<mapper namespace="com.cdd.mapi.cof.dao.ICOFDao">
		<insert id="addNews" parameterType="CircleOfFriends">
	 		insert into t_circle_of_friends 
	 			(message,sender,create_time,modify_time) 
	 		values
	 			(#{content},#{memberId},now(),now())
		 	<selectKey resultType="int" keyProperty="id" order="AFTER">  
	  			SELECT LAST_INSERT_ID() as id
	  		</selectKey>  
	 	</insert>
	 	
	 	<insert id="addPhotos" parameterType="Map">
	 	    insert into t_cof_photo 
	 			(photo,member_id,cof_id,create_time) 
	 		values
	 		<foreach collection="photos" item="photo" index="index" separator=",">
	 		    (#{photo},#{memberId},#{cofId},now())
	 		</foreach>
	 	</insert>
	 	
	 	<insert id="addReply" parameterType="COFReply">
	 		insert into t_cof_reply 
	 			(message,sender,cof_id,create_time) 
	 		values
	 			(#{message},#{memberId},#{cofId},now())
		 	<selectKey resultType="int" keyProperty="id" order="AFTER">  
	  			SELECT LAST_INSERT_ID() as id
	  		</selectKey>  
	 	</insert>
	 	
	 	<insert id="addCofAffiliated" parameterType="COFAffiliatedInfo">
	 		insert into t_cof_affiliated_info 
	 			(member_id,cof_id,type,create_time,status) 
	 		values
	 			(#{memberId},#{cofId},#{type},now(),0)
		 	<selectKey resultType="int" keyProperty="id" order="AFTER">  
	  			SELECT LAST_INSERT_ID() as id
	  		</selectKey>  
	 	</insert>
	 	
	 	<insert id="forwardNews" parameterType="ForwardNews">
	 	    insert into t_circle_of_friends 
	 			(sender,is_forward,forward_cof_id,create_time) 
	 		values
	 			(#{memberId},1,#{newsId},now())
	 	</insert>
	 	
	 	<update id="updateCofLikeCount" parameterType="int">
	 	    update t_circle_of_friends set like_count = like_count + 1,modify_time = now() where id = #{cofId}
	 	</update>
	 	
	 	<update id="updateCofFavCount" parameterType="int">
	 	    update t_circle_of_friends set favorite_count = favorite_count + 1,modify_time = now() where id = #{cofId}
	 	</update>
	 	
	 	<update id="updateCofShareCount" parameterType="int">
	 	    update t_circle_of_friends set share_count = share_count + 1,modify_time = now() where id = #{cofId}
	 	</update>
	 	
	 	<select id="findCofAffiliatedInfo" parameterType="COFAffiliatedInfo" resultType="int">
	 	    select count(id) from t_cof_affiliated_info 
	 	    where member_id = #{memberId} and type = #{type} and cof_id = #{cofId}
	 	</select>
	 	
	 	<select id="getNewsInfoById" parameterType="int" resultMap="getNewsInfoMap">
	 		<include refid="newsCommon"/>
	 		where cof.id = #{newsId}
	 	</select>
	 	
	 	<resultMap type="CofNewsVO" id="getNewsInfoMap">
	 	    <id column="id" property="id"/>
	 	    <result column="content" property="content"/>
	 	    <result column="likeCount" property="likeCount"/>
	 	    <result column="shareCount" property="shareCount"/>
	 	    <result column="favoriteCount" property="favoriteCount"/>
	 	    <result column="createTime" property="createTime"/>
	 	    <result column="memberName" property="memberName"/>
	 	    <result column="memberSex" property="memberSex"/>
	 	    <result column="memberPhoto" property="memberPhoto"/>
	 	    <result column="memberLevelName" property="memberLevelName"/>
	 	    <result column="memberId" property="memberId"/>
	 	    <result column="is_forward" property="isForward"/>
	 	    <result column="forward_cof_id" property="forwardCofId"/>
	 	    <association property="forwardNews" column="forward_cof_id" select="getForwardNewsInfo"/>
	 	    <collection property="photos" column="cofp_cof_id" ofType="ForumPhoto">
	 	        <id column="cofp_id" property="id"/>
	 	        <result column="cofp_photo" javaType="String" property="url"/>
	 	    </collection>
	 	    <collection property="replyList" column="id" javaType="ArrayList" ofType="COFReplyVO" select="getReplyList4NewInfo"></collection>
	 	</resultMap>
	 	
	 	<select id="getReplyList4NewInfo" parameterType="int" resultType="COFReplyVO">
	 		select
		 			cofr.id,
		 			cofr.sender as memberId,
		 			cofr.message as message,
		 			DATE_FORMAT(cofr.create_time,'%Y-%m-%d %H:%i') as createTime,
		 			cofr.cof_id as cofId,
		 			m.name as memberName,
		 			m.sex as memberSex,
		 			m.photo as memberPhoto,
		 			l.name as memberLevelName
		 		from 
		 			t_cof_reply cofr 
		 		left join 
		 			t_member m 
		 		on 
		 			cofr.sender = m.id
		 		left 
		 			join t_level l
	 			on
	 				m.level_id = l.id
	 		where cofr.cof_id = #{cofId}
	 		order by cofr.create_time desc
	 		limit 0,20
	 	</select>
	</mapper> 
